
(in-package :edec)

(defmacro gen-chk-sig (place)
  `(list* ',place (cdr (ssig-sign ,place))))

(defun verify-chk-sig (chk-sig)
  (with-simple-restart (continue "Check remaining signatures")
    (assert (apply #'ssig-verify
                   (eval (car chk-sig))
                   (cdr chk-sig))
        ()
      "Data does not match signature: ~A" (car chk-sig)
      )))

;; -------------------------------------------------
(with-ed-curve :curve1174
  (unless (boundp '*my-pkey*)
    (multiple-value-bind (pkey shares)
        (gen-key-pair)
      (distribute-shares shares)
      (setf *my-pkey* pkey)))
  (assert (ed-pt= *my-pkey*
                  (ed-mul *ed-gen* *my-skey*))
      ))
;; ---------------------------------------------------
#|
(with-ed-curve :curve1174
  (let ((*print-readably* t)
        (*print-radix*    t))
    (pprint
     (loop for sym in '(*my-pkey*
                        *my-skey*
                        *curve1174*
                        *curve-E382*
                        *curve41417*
                        *curve-Ed448*
                        *curve-e521*
                        *curve-Ed3363*
                        core-crypto::*wordlist*)
           collect
           (eval `(gen-chk-sig ,sym))
           ))))

#-:WINDOWS
(with-ed-curve :curve1174
  (let ((*print-readably* t)
        (*print-radix*    t))
    (pprint
     (loop for sym in '(pbc::*pairing-fr449-params*
                        pbc::*pairing-fr256-params*
                        pbc::*pairing-fr255-params*
                        pbc::*pairing-fr250-params*
                        pbc::*pairing-fr248-params*
                        pbc::*pairing-fr247-params*
                        pbc::*pairing-fr256-params-old*
                        pbc::*pairing-default-ar160-params*)
           collect
           (eval `(gen-chk-sig ,sym))
           ))))
|#
#||#
(with-ed-curve :curve1174
  (dolist (sig
           '((*MY-PKEY*
  #S(ECC-CMPR-PT :CX 3238706287253458695043697889970663825594649144648473593115026994751520435692.)
  769594620429293513777906516248380967118141276403421935626986100222609832403.
  #.(make-instance 'COM.RAL.HASH:HASH/256 :val (bev-vec (hex "C813832C6F1486946949891185142A5CC15FBDD68C0A48233F7DC6BADA3F0CCA"))))
 (*MY-SKEY*
  #S(ECC-CMPR-PT :CX 3238706287253458695043697889970663825594649144648473593115026994751520435692.)
  303902579162384662910236546076195706282969212880371756113468631748296233218.
  #.(make-instance 'COM.RAL.HASH:HASH/256 :val (bev-vec (hex "CE43B7315C05D42679F15B4DFB63E75A1B55BE5E33EDD459A808F686CA079C6D"))))
 (*CURVE1174*
  #S(ECC-CMPR-PT :CX 3238706287253458695043697889970663825594649144648473593115026994751520435692.)
  785168525018713823201059235480205449134114876461429797387911002932544399070.
  #.(make-instance 'COM.RAL.HASH:HASH/256 :val (bev-vec (hex "9644A6FA779C23EF2D7C721FBECE648F25FE7323C31A144B38A990261CB891C8"))))
 (*CURVE-E382*
  #S(ECC-CMPR-PT :CX 3238706287253458695043697889970663825594649144648473593115026994751520435692.)
  400106379314506915259329805332258005375616602328245051575187764638942014788.
  #.(make-instance 'COM.RAL.HASH:HASH/256 :val (bev-vec (hex "8CE6696C98CE27AE1911F096B746534E0E78BB557FF0C1AF831BBC1FE11A13FB"))))
 (*CURVE41417*
  #S(ECC-CMPR-PT :CX 3238706287253458695043697889970663825594649144648473593115026994751520435692.)
  555058982170494842019190603738811083052243555352141094144154431422515390233.
  #.(make-instance 'COM.RAL.HASH:HASH/256 :val (bev-vec (hex "EB558E4968F27897167CF472ED79AC0E667FFCD4504B75BD4462F94014340C66"))))
 (*CURVE-ED448*
  #S(ECC-CMPR-PT :CX 3238706287253458695043697889970663825594649144648473593115026994751520435692.)
  248237667808472813239340398279677988344571901433190906473350051795155542014.
  #.(make-instance 'COM.RAL.HASH:HASH/256 :val (bev-vec (hex "1524159C51C6E876E3861B2EB06A00269EDC49D3A671458BE12E6B277DFDA071"))))
 (*CURVE-E521*
  #S(ECC-CMPR-PT :CX 3238706287253458695043697889970663825594649144648473593115026994751520435692.)
  348358743941449060788673751570321200272949333643762600706324072993073545918.
  #.(make-instance 'COM.RAL.HASH:HASH/256 :val (bev-vec (hex "32D4A78DE2D8B02CA1A2942568AF1D4E6988EF94C37F912FBBCC01120C5B2608"))))
 (*CURVE-ED3363*
  #S(ECC-CMPR-PT :CX 3238706287253458695043697889970663825594649144648473593115026994751520435692.)
  903870877525499099616964726171941592691201141440125584919306338214682982009.
  #.(make-instance 'COM.RAL.HASH:HASH/256 :val (bev-vec (hex "4E062C12E929A07118DAEF8799EF0402A82313DBE2736124B48206C220E0DF58"))))
 (COM.RAL.CORE-CRYPTO::*WORDLIST*
  #S(ECC-CMPR-PT :CX 3238706287253458695043697889970663825594649144648473593115026994751520435692.)
  238832742011432774834902895508528566331884793958203542180485638588564892933.
  #.(make-instance 'COM.RAL.HASH:HASH/256 :val (bev-vec (hex "27CBFC44B8F5A67D6CF50AA5EC6DF81F48061B4789BFCE849A94C8FC8454061E"))))))
    (verify-chk-sig sig)))

(when (boundp 'pbc-interface::*pairing-fr449-params*)
  (with-ed-curve :curve1174
    (dolist (sig
             '((PBC-INTERFACE::*PAIRING-FR449-PARAMS*
                #S(ECC-CMPR-PT :CX 3238706287253458695043697889970663825594649144648473593115026994751520435692.)
                567634031224075103458277995620484480966890591976384874346576208801461634490.
                #.(make-instance 'HASH:HASH/256 :val (bev-vec (hex "2FFE5421824BBE2D2C34AD6EF42EA2A5A767A55D0C4A3B91E5CED02859F06D42"))))
               (PBC-INTERFACE::*PAIRING-FR256-PARAMS*
                #S(ECC-CMPR-PT :CX 3238706287253458695043697889970663825594649144648473593115026994751520435692.)
                13729535899391894587464717838898627614831747994732831369997072545871472882.
                #.(make-instance 'HASH:HASH/256 :val (bev-vec (hex "010B8465473938715833C0E2D9AD76033AB947DDAA6B1F33DFB0741FC36E5751"))))
               (PBC-INTERFACE::*PAIRING-FR255-PARAMS*
                #S(ECC-CMPR-PT :CX 3238706287253458695043697889970663825594649144648473593115026994751520435692.)
                146913311914839357832818609433691276117903667559683461495173177972090195143.
                #.(make-instance 'HASH:HASH/256 :val (bev-vec (hex "3202A55075FF0FDA92389F680CD9848FBFF86069C668B63170DD10F8C824C742"))))
               (PBC-INTERFACE::*PAIRING-FR250-PARAMS*
                #S(ECC-CMPR-PT :CX 3238706287253458695043697889970663825594649144648473593115026994751520435692.)
                182711763030100476720659762154254806352829833296584761328012844044705719121.
                #.(make-instance 'HASH:HASH/256 :val (bev-vec (hex "0E73C2847510231EB6E4B097E6867F965BA29C7800A8F93AC59811254DAAB8B5"))))
               (PBC-INTERFACE::*PAIRING-FR248-PARAMS*
                #S(ECC-CMPR-PT :CX 3238706287253458695043697889970663825594649144648473593115026994751520435692.)
                347965866204566098551555447789353573381258081077886134615186426331342876096.
                #.(make-instance 'HASH:HASH/256 :val (bev-vec (hex "1E6BB0FD9D429BA9DE56A1FF1CDFC11ED971269F582041FFF3A4CC0926CB6AED"))))
               (PBC-INTERFACE::*PAIRING-FR247-PARAMS*
                #S(ECC-CMPR-PT :CX 3238706287253458695043697889970663825594649144648473593115026994751520435692.)
                542155640578904169838495658575767213684293238389045491328987920127437984394.
                #.(make-instance 'HASH:HASH/256 :val (bev-vec (hex "D1AF0C0A4D2252BFA443C0BD076B2FA15541C0023C80B71B3D6ACB23414F96D0"))))
               (PBC-INTERFACE::*PAIRING-FR256-PARAMS-OLD*
                #S(ECC-CMPR-PT :CX 3238706287253458695043697889970663825594649144648473593115026994751520435692.)
                297692343405769506554266456238063958808620663534763031574012188183659030830.
                #.(make-instance 'HASH:HASH/256 :val (bev-vec (hex "7EEB55FE7BFF33DC4E63BBB2BE7F46967523A59D4E2B2CB567B4F6AC50D5DBCE"))))
               (PBC-INTERFACE::*PAIRING-DEFAULT-AR160-PARAMS*
                #S(ECC-CMPR-PT :CX 3238706287253458695043697889970663825594649144648473593115026994751520435692.)
                195961487675684930235628293478716013455218172168674655976564529825408459386.
                #.(make-instance 'HASH:HASH/256 :val (bev-vec (hex "4767C632BA1B964164F73F7927DAE55A3A51C09185988050C69683C37010D83F"))))))
      (verify-chk-sig sig))))
  

#||#
